{
  "PageFactory Instance": {
    "prefix": "pfinst",
    "body": ["const pageFactory = PageFactory.instance;"],
    "description": "Create a constant with reference to PageFactory instance"
  },
  "PageFactory Instance with Import": {
    "prefix": "pfinstfull",
    "body": [
      "import { pageFactory } from '${1:./PageFactory}';",
      "",
      "// Usage: pageFactory.setPage(page);"
    ],
    "description": "Import PageFactory instance with usage example"
  },
  "PageFactory Direct Import": {
    "prefix": "pfimport",
    "body": [
      "import { ${1:pageFactory, setPage, page} } from '${2:./PageFactory}';"
    ],
    "description": "Import PageFactory exports directly"
  },
  "Page Object Class": {
    "prefix": "pageobjectclass",
    "body": [
      "/**",
      " * ${1:PageName} - Page Object class",
      " */",
      "export class ${1:PageName} {",
      "    constructor() {",
      "        // Initialize page elements and actions",
      "    }",
      "",
      "    // Add page elements and methods here",
      "}"
    ],
    "description": "Create a basic Page Object class template"
  },
  "Smart PageFactory Setup": {
    "prefix": "pfsetup",
    "body": [
      "import { pageFactory, setPage, page } from '${1:./PageFactory}';",
      "",
      "// Setup page in test",
      "setPage(${2:yourPageInstance});",
      "",
      "// Access Page Object instances using Command Palette:",
      "// Ctrl+Shift+P -> 'SnapWright: Use Page Object from PageFactory'"
    ],
    "description": "Complete PageFactory setup pattern with Command Palette guidance"
  },
  "Page Setup": {
    "prefix": "pfpage",
    "body": [
      "import { setPage, page } from '${1:./PageFactory}';",
      "",
      "// In your test setup",
      "setPage(${2:browserPage});",
      "",
      "// Access page anywhere",
      "const currentPage = page;"
    ],
    "description": "Page setup and access pattern"
  }
}
