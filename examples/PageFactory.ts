import { type Page } from "@playwright/test";
import { HomePage } from "./pages/HomePage";
import { LoginPage } from "./pages/LoginPage";
import { ProfilePage } from "./pages/ProfilePage";

/**
 * PageFactory - Singleton class for managing Page Object instances
 * Generated by SnapWright
 */
class PageFactory {
  private static _instance: PageFactory;
  private _globalPage: Page;
  private _homePage: HomePage;
  private _loginPage: LoginPage;
  private _profilePage: ProfilePage;

  private constructor() {}

  private static setInstance() {
    PageFactory._instance = new PageFactory();
  }

  public static get instance() {
    if (!PageFactory._instance) PageFactory.setInstance();

    return PageFactory._instance;
  }

  public setPage(page: Page) {
    this._globalPage = page;
  }

  public get page(): Page {
    if (!this._globalPage)
      throw new Error("Page not set. Use setPage(page) first.");

    return this._globalPage;
  }

  private ensurePageSet(page?: Page): void {
    if (!this._globalPage) {
      if (!page) throw new Error("Page not set. Use setPage(page) first.");
      this.setPage(page);
    }
  }

  public getHomePage(page?: Page): HomePage {
    this.ensurePageSet(page);
    if (!this._homePage) this._homePage = new HomePage();
    return this._homePage;
  }

  public getLoginPage(page?: Page): LoginPage {
    this.ensurePageSet(page);
    if (!this._loginPage) this._loginPage = new LoginPage();
    return this._loginPage;
  }

  public getProfilePage(page?: Page): ProfilePage {
    this.ensurePageSet(page);
    if (!this._profilePage) this._profilePage = new ProfilePage();
    return this._profilePage;
  }
}

export const pageFactory = PageFactory.instance;
export const setPage = PageFactory.instance.setPage;
export const page = PageFactory.instance.page;

export const getHomePage = PageFactory.instance.getHomePage;
export const getLoginPage = PageFactory.instance.getLoginPage;
export const getProfilePage = PageFactory.instance.getProfilePage;
